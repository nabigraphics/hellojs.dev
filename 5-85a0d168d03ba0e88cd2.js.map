{"version":3,"sources":["webpack:///./node_modules/react-spring/universal.cjs.js","webpack:///./node_modules/react-with-gesture/dist/react-with-gesture.es.js"],"names":["_interopDefault","ex","Object","defineProperty","exports","value","_extends","__webpack_require__","_objectWithoutPropertiesLoose","React","React__default","_inheritsLoose","_assertThisInitialized","is","arr","Array","isArray","obj","a","prototype","toString","call","fun","str","num","und","nul","set","Set","map","Map","equ","b","keys","length","i","useForceUpdate","f","useState","useCallback","v","withDefault","defaultValue","toArray","callProp","_len","arguments","args","_key","apply","interpolateTo","props","forward","to","from","config","onStart","onRest","onFrame","children","reset","reverse","force","immediate","delay","attach","destroyed","ref","lazy","getForwardProps","rest","reduce","k","_extends2","applyAnimatedValues","colorNames","Animated","this","payload","_proto","getAnimatedValue","getValue","getPayload","detach","getChildren","addChild","child","push","removeChild","index","indexOf","splice","AnimatedArray","_Animated","_this","concat","forEach","p","AnimatedObject","_Animated2","_this2","_len3","_key3","values","s","_proto2","animated","_key4","injectApplyAnimatedValues","fn","transform","interpolation","requestFrame","cb","window","requestAnimationFrame","cancelFrame","id","cancelAnimationFrame","injectStringInterpolator","defaultElement","now","Date","createAnimatedStyle","animatedApi","node","current","manualFrameloop","Globals","freeze","injectColorNames","names","injectFrame","raf","caf","injectNow","nowFn","injectDefaultElement","el","injectAnimatedApi","injectCreateAnimatedStyle","factory","injectManualFrameloop","manual","AnimatedProps","_AnimatedObject","callback","update","style","createAnimatedComponent","Component","forwardRef","_ref","forceUpdate","mounted","useRef","propsAnimated","attachProps","oldPropsAnimated","useEffect","useImperativeHandle","_getValue","animatedProps","scrollTop","scrollLeft","createElement","childRef","handleRef","createInterpolator","range","output","extrapolate","outputRange","inputRange","extrapolateLeft","extrapolateRight","easing","t","input","findRange","inputMin","inputMax","outputMin","outputMax","result","Infinity","interpolate","AnimatedInterpolation","_AnimatedArray","parents","calc","updateConfig","AnimatedValue","_value","animatedStyles","startPosition","lastPosition","lastVelocity","startTime","lastTime","done","setValue","flush","size","addAnimatedStyles","styles","add","animatedStyle","clearStyles","clear","AnimatedValueArray","n","active","controllers","time","_iterator","_isArray","_i","Symbol","iterator","next","controller","isActive","configIdx","configs","endOfAnimation","valIdx","animatedValues","animation","fromValues","toValues","position","isAnimated","velocity","initialVelocity","duration","decay","Math","exp","abs","numSteps","floor","tension","friction","mass","isOvershooting","clamp","isVelocity","precision","isDisplacement","name","delete","stop","G","Controller","idle","hasChanged","guid","local","merged","animations","interpolations","listeners","queue","localQueue","getValues","_ref$delay","merge$$1","entries","_ref2","_to","entry","sort","diff","start","onEnd","_this3","_ref3","_ref3$from","_ref3$to","_ref4","finished","async","setTimeout","runAsync","has","pause","_ref5","_this4","Promise","resolve","undefined","_loop","fresh","then","r","last","_this5","_this$props","_this$props$from","_this$props$to","_this$props$config","_ref6","target","acc","_ref7","isNumber","isString","startsWith","test","isInterpolation","fromValue","toValue","toConfig","parent","interpolation$$1","newValue","_extends3","currentValue","some","currentValueDiffersFromGoal","hasNewGoal","previous","hasNewConfig","prev","key","destroy","useSprings","ctrl","isFn","_useMemo","useMemo","c","fill","_","newProps","all","updateCtrl","updateProps","propValues","ENTER","LEAVE","UPDATE","mapKeys","items","String","get","_props$keys","item","cleanUp","state","filterKey","_ref8","filter","instances","transitions","deleted","stringShapeRegex","config$$1","outputRanges","match","number","replace","lowercase","object","element","toLowerCase","substring","Interpolation","create","default","gentle","wobbly","stiff","slow","molasses","useSpring","_useSprings","useTrail","attachIdx","attachController","useTransition","keyTransform","_get","_get$lazy","_get$reset","unique","onDestroyed","enter","leave","_onRest","extra","first","prevProps","paused","_ref9","_get2","initial","_get2$trail","trail","_get2$order","order","_get3","_keys","_items","currentKeys","currentSet","nextSet","added","removed","originalKey","updated","changeType","shift","find","d","keyIndex","slot","unshift","left","max","right","min","out","_ref10","pos","findIndex","slice","changed","diffItems","transition","useChain","refs","timeSteps","timeFrame","ctrls","e","q","rI","__webpack_exports__","useGesture","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","assign","source","hasOwnProperty","self","ReferenceError","touchMove","touchEnd","mouseMove","mouseUp","defaultProps","touch","mouse","passive","onAction","onDown","onUp","onMove","initialState","event","temp","xy","delta","direction","lastLocal","distance","down","shiftKey","handlers","handleUp","handleMove","touches","pageX","pageY","x_dist","y_dist","delta_x","delta_y","sqrt","len","scalar","addEventListener","cancel","removeEventListener","capture","Gesture","_React$Component","subClass","superClass","setState","bind","_state","constructor","__proto__","render","className","display","_React$useState","transientState","spread"],"mappings":"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","file":"5-85a0d168d03ba0e88cd2.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar _extends = _interopDefault(require('@babel/runtime/helpers/extends'));\nvar _objectWithoutPropertiesLoose = _interopDefault(require('@babel/runtime/helpers/objectWithoutPropertiesLoose'));\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar _inheritsLoose = _interopDefault(require('@babel/runtime/helpers/inheritsLoose'));\nvar _assertThisInitialized = _interopDefault(require('@babel/runtime/helpers/assertThisInitialized'));\n\nvar is = {\n  arr: Array.isArray,\n  obj: function obj(a) {\n    return Object.prototype.toString.call(a) === '[object Object]';\n  },\n  fun: function fun(a) {\n    return typeof a === 'function';\n  },\n  str: function str(a) {\n    return typeof a === 'string';\n  },\n  num: function num(a) {\n    return typeof a === 'number';\n  },\n  und: function und(a) {\n    return a === void 0;\n  },\n  nul: function nul(a) {\n    return a === null;\n  },\n  set: function set(a) {\n    return a instanceof Set;\n  },\n  map: function map(a) {\n    return a instanceof Map;\n  },\n  equ: function equ(a, b) {\n    if (typeof a !== typeof b) return false;\n    if (is.str(a) || is.num(a)) return a === b;\n    if (is.obj(a) && is.obj(b) && Object.keys(a).length + Object.keys(b).length === 0) return true;\n    var i;\n\n    for (i in a) {\n      if (!(i in b)) return false;\n    }\n\n    for (i in b) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return is.und(i) ? a === b : true;\n  }\n};\nfunction merge(target, lowercase) {\n  if (lowercase === void 0) {\n    lowercase = true;\n  }\n\n  return function (object) {\n    return (is.arr(object) ? object : Object.keys(object)).reduce(function (acc, element) {\n      var key = lowercase ? element[0].toLowerCase() + element.substring(1) : element;\n      acc[key] = target(key);\n      return acc;\n    }, target);\n  };\n}\nfunction useForceUpdate() {\n  var _useState = React.useState(false),\n      f = _useState[1];\n\n  var forceUpdate = React.useCallback(function () {\n    return f(function (v) {\n      return !v;\n    });\n  }, []);\n  return forceUpdate;\n}\nfunction withDefault(value, defaultValue) {\n  return is.und(value) || is.nul(value) ? defaultValue : value;\n}\nfunction toArray(a) {\n  return !is.und(a) ? is.arr(a) ? a : [a] : [];\n}\nfunction callProp(obj) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return is.fun(obj) ? obj.apply(void 0, args) : obj;\n}\n\nfunction getForwardProps(props) {\n  var to = props.to,\n      from = props.from,\n      config = props.config,\n      onStart = props.onStart,\n      onRest = props.onRest,\n      onFrame = props.onFrame,\n      children = props.children,\n      reset = props.reset,\n      reverse = props.reverse,\n      force = props.force,\n      immediate = props.immediate,\n      delay = props.delay,\n      attach = props.attach,\n      destroyed = props.destroyed,\n      interpolateTo = props.interpolateTo,\n      ref = props.ref,\n      lazy = props.lazy,\n      forward = _objectWithoutPropertiesLoose(props, [\"to\", \"from\", \"config\", \"onStart\", \"onRest\", \"onFrame\", \"children\", \"reset\", \"reverse\", \"force\", \"immediate\", \"delay\", \"attach\", \"destroyed\", \"interpolateTo\", \"ref\", \"lazy\"]);\n\n  return forward;\n}\n\nfunction interpolateTo(props) {\n  var forward = getForwardProps(props);\n  if (is.und(forward)) return _extends({\n    to: forward\n  }, props);\n  var rest = Object.keys(props).reduce(function (a, k) {\n    var _extends2;\n\n    return !is.und(forward[k]) ? a : _extends({}, a, (_extends2 = {}, _extends2[k] = props[k], _extends2));\n  }, {});\n  return _extends({\n    to: forward\n  }, rest);\n}\nfunction handleRef(ref, forward) {\n  if (forward) {\n    // If it's a function, assume it's a ref callback\n    if (is.fun(forward)) forward(ref);else if (is.obj(forward)) {\n      forward.current = ref;\n    }\n  }\n\n  return ref;\n}\n\nvar Animated =\n/*#__PURE__*/\nfunction () {\n  function Animated() {\n    this.payload = void 0;\n    this.children = [];\n  }\n\n  var _proto = Animated.prototype;\n\n  _proto.getAnimatedValue = function getAnimatedValue() {\n    return this.getValue();\n  };\n\n  _proto.getPayload = function getPayload() {\n    return this.payload || this;\n  };\n\n  _proto.attach = function attach() {};\n\n  _proto.detach = function detach() {};\n\n  _proto.getChildren = function getChildren() {\n    return this.children;\n  };\n\n  _proto.addChild = function addChild(child) {\n    if (this.children.length === 0) this.attach();\n    this.children.push(child);\n  };\n\n  _proto.removeChild = function removeChild(child) {\n    var index = this.children.indexOf(child);\n    this.children.splice(index, 1);\n    if (this.children.length === 0) this.detach();\n  };\n\n  return Animated;\n}();\nvar AnimatedArray =\n/*#__PURE__*/\nfunction (_Animated) {\n  _inheritsLoose(AnimatedArray, _Animated);\n\n  function AnimatedArray() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Animated.call.apply(_Animated, [this].concat(args)) || this;\n    _this.payload = [];\n\n    _this.attach = function () {\n      return _this.payload.forEach(function (p) {\n        return p instanceof Animated && p.addChild(_assertThisInitialized(_assertThisInitialized(_this)));\n      });\n    };\n\n    _this.detach = function () {\n      return _this.payload.forEach(function (p) {\n        return p instanceof Animated && p.removeChild(_assertThisInitialized(_assertThisInitialized(_this)));\n      });\n    };\n\n    return _this;\n  }\n\n  return AnimatedArray;\n}(Animated);\nvar AnimatedObject =\n/*#__PURE__*/\nfunction (_Animated2) {\n  _inheritsLoose(AnimatedObject, _Animated2);\n\n  function AnimatedObject() {\n    var _this2;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this2 = _Animated2.call.apply(_Animated2, [this].concat(args)) || this;\n    _this2.payload = {};\n\n    _this2.attach = function () {\n      return Object.values(_this2.payload).forEach(function (s) {\n        return s instanceof Animated && s.addChild(_assertThisInitialized(_assertThisInitialized(_this2)));\n      });\n    };\n\n    _this2.detach = function () {\n      return Object.values(_this2.payload).forEach(function (s) {\n        return s instanceof Animated && s.removeChild(_assertThisInitialized(_assertThisInitialized(_this2)));\n      });\n    };\n\n    return _this2;\n  }\n\n  var _proto2 = AnimatedObject.prototype;\n\n  _proto2.getValue = function getValue(animated) {\n    if (animated === void 0) {\n      animated = false;\n    }\n\n    var payload = {};\n\n    for (var _key4 in this.payload) {\n      var value = this.payload[_key4];\n      if (animated && !(value instanceof Animated)) continue;\n      payload[_key4] = value instanceof Animated ? value[animated ? 'getAnimatedValue' : 'getValue']() : value;\n    }\n\n    return payload;\n  };\n\n  _proto2.getAnimatedValue = function getAnimatedValue() {\n    return this.getValue(true);\n  };\n\n  return AnimatedObject;\n}(Animated);\n\nvar applyAnimatedValues;\nfunction injectApplyAnimatedValues(fn, transform) {\n  applyAnimatedValues = {\n    fn: fn,\n    transform: transform\n  };\n}\nvar colorNames;\nfunction injectColorNames(names) {\n  colorNames = names;\n}\nvar requestFrame = function requestFrame(cb) {\n  return typeof window !== 'undefined' ? window.requestAnimationFrame(cb) : -1;\n};\nvar cancelFrame = function cancelFrame(id) {\n  typeof window !== 'undefined' && window.cancelAnimationFrame(id);\n};\nfunction injectFrame(raf, caf) {\n  requestFrame = raf;\n  cancelFrame = caf;\n}\nvar interpolation;\nfunction injectStringInterpolator(fn) {\n  interpolation = fn;\n}\nvar now = function now() {\n  return Date.now();\n};\nfunction injectNow(nowFn) {\n  now = nowFn;\n}\nvar defaultElement;\nfunction injectDefaultElement(el) {\n  defaultElement = el;\n}\nvar animatedApi = function animatedApi(node) {\n  return node.current;\n};\nfunction injectAnimatedApi(fn) {\n  animatedApi = fn;\n}\nvar createAnimatedStyle;\nfunction injectCreateAnimatedStyle(factory) {\n  createAnimatedStyle = factory;\n}\nvar manualFrameloop = false;\nfunction injectManualFrameloop(manual) {\n  manualFrameloop = manual;\n}\n\nvar Globals = /*#__PURE__*/Object.freeze({\n  get applyAnimatedValues () { return applyAnimatedValues; },\n  injectApplyAnimatedValues: injectApplyAnimatedValues,\n  get colorNames () { return colorNames; },\n  injectColorNames: injectColorNames,\n  get requestFrame () { return requestFrame; },\n  get cancelFrame () { return cancelFrame; },\n  injectFrame: injectFrame,\n  get interpolation () { return interpolation; },\n  injectStringInterpolator: injectStringInterpolator,\n  get now () { return now; },\n  injectNow: injectNow,\n  get defaultElement () { return defaultElement; },\n  injectDefaultElement: injectDefaultElement,\n  get animatedApi () { return animatedApi; },\n  injectAnimatedApi: injectAnimatedApi,\n  get createAnimatedStyle () { return createAnimatedStyle; },\n  injectCreateAnimatedStyle: injectCreateAnimatedStyle,\n  get manualFrameloop () { return manualFrameloop; },\n  injectManualFrameloop: injectManualFrameloop\n});\n\n/**\n * Wraps the `style` property with `AnimatedStyle`.\n */\n\nvar AnimatedProps =\n/*#__PURE__*/\nfunction (_AnimatedObject) {\n  _inheritsLoose(AnimatedProps, _AnimatedObject);\n\n  function AnimatedProps(props, callback) {\n    var _this;\n\n    _this = _AnimatedObject.call(this) || this;\n    _this.update = void 0;\n    _this.payload = !props.style ? props : _extends({}, props, {\n      style: createAnimatedStyle(props.style)\n    });\n    _this.update = callback;\n\n    _this.attach();\n\n    return _this;\n  }\n\n  return AnimatedProps;\n}(AnimatedObject);\n\nvar createAnimatedComponent = function createAnimatedComponent(Component) {\n  var AnimatedComponent = React.forwardRef(function (props, _ref) {\n    var forceUpdate = useForceUpdate();\n    var mounted = React.useRef(true);\n    var propsAnimated = React.useRef(null);\n    var node = React.useRef(null);\n    var attachProps = React.useCallback(function (props) {\n      var oldPropsAnimated = propsAnimated.current;\n\n      var callback = function callback() {\n        if (node.current) {\n          var didUpdate = applyAnimatedValues.fn(node.current, propsAnimated.current.getAnimatedValue());\n          if (didUpdate === false) forceUpdate();\n        }\n      };\n\n      propsAnimated.current = new AnimatedProps(props, callback);\n      oldPropsAnimated && oldPropsAnimated.detach();\n    }, []);\n    React.useEffect(function () {\n      return function () {\n        mounted.current = false;\n        propsAnimated.current && propsAnimated.current.detach();\n      };\n    }, []);\n    React.useImperativeHandle(_ref, function () {\n      return animatedApi(node, mounted, forceUpdate);\n    });\n    attachProps(props);\n\n    var _getValue = propsAnimated.current.getValue(),\n        scrollTop = _getValue.scrollTop,\n        scrollLeft = _getValue.scrollLeft,\n        animatedProps = _objectWithoutPropertiesLoose(_getValue, [\"scrollTop\", \"scrollLeft\"]);\n\n    return React__default.createElement(Component, _extends({}, animatedProps, {\n      ref: function ref(childRef) {\n        return node.current = handleRef(childRef, _ref);\n      }\n    }));\n  });\n  return AnimatedComponent;\n};\n\nfunction createInterpolator(range, output, extrapolate) {\n  if (typeof range === 'function') {\n    return range;\n  }\n\n  if (Array.isArray(range)) {\n    return createInterpolator({\n      range: range,\n      output: output,\n      extrapolate: extrapolate\n    });\n  }\n\n  if (interpolation && typeof range.output[0] === 'string') {\n    return interpolation(range);\n  }\n\n  var config = range;\n  var outputRange = config.output;\n  var inputRange = config.range || [0, 1];\n  var extrapolateLeft = config.extrapolateLeft || config.extrapolate || 'extend';\n  var extrapolateRight = config.extrapolateRight || config.extrapolate || 'extend';\n\n  var easing = config.easing || function (t) {\n    return t;\n  };\n\n  return function (input) {\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight, config.map);\n  };\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {\n  var result = map ? map(input) : input; // Extrapolate\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') return result;else if (extrapolateLeft === 'clamp') result = inputMin;\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') return result;else if (extrapolateRight === 'clamp') result = inputMax;\n  }\n\n  if (outputMin === outputMax) return outputMin;\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax; // Input Range\n\n  if (inputMin === -Infinity) result = -result;else if (inputMax === Infinity) result = result - inputMin;else result = (result - inputMin) / (inputMax - inputMin); // Easing\n\n  result = easing(result); // Output Range\n\n  if (outputMin === -Infinity) result = -result;else if (outputMax === Infinity) result = result + outputMin;else result = result * (outputMax - outputMin) + outputMin;\n  return result;\n}\n\nfunction findRange(input, inputRange) {\n  for (var i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) break;\n  }\n\n  return i - 1;\n}\n\nvar AnimatedInterpolation =\n/*#__PURE__*/\nfunction (_AnimatedArray) {\n  _inheritsLoose(AnimatedInterpolation, _AnimatedArray);\n\n  function AnimatedInterpolation(parents, range, output) {\n    var _this;\n\n    _this = _AnimatedArray.call(this) || this;\n    _this.calc = void 0;\n    _this.payload = parents instanceof AnimatedArray && !(parents instanceof AnimatedInterpolation) ? parents.getPayload() : Array.isArray(parents) ? parents : [parents];\n    _this.calc = createInterpolator(range, output);\n    return _this;\n  }\n\n  var _proto = AnimatedInterpolation.prototype;\n\n  _proto.getValue = function getValue() {\n    return this.calc.apply(this, this.payload.map(function (value) {\n      return value.getValue();\n    }));\n  };\n\n  _proto.updateConfig = function updateConfig(range, output) {\n    this.calc = createInterpolator(range, output);\n  };\n\n  _proto.interpolate = function interpolate(range, output) {\n    return new AnimatedInterpolation(this, range, output);\n  };\n\n  return AnimatedInterpolation;\n}(AnimatedArray);\n\nvar interpolate$1 = function interpolate(parents, range, output) {\n  return parents && new AnimatedInterpolation(parents, range, output);\n};\n\nvar config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\n/** API\n *  useChain(references, timeSteps, timeFrame)\n */\n\nfunction useChain(refs, timeSteps, timeFrame) {\n  if (timeFrame === void 0) {\n    timeFrame = 1000;\n  }\n\n  var previous = React.useRef();\n  React.useEffect(function () {\n    if (is.equ(refs, previous.current)) refs.forEach(function (_ref) {\n      var current = _ref.current;\n      return current && current.start();\n    });else if (timeSteps) {\n      refs.forEach(function (_ref2, index) {\n        var current = _ref2.current;\n\n        if (current) {\n          var ctrls = current.controllers;\n\n          if (ctrls.length) {\n            var t = timeFrame * timeSteps[index];\n            ctrls.forEach(function (ctrl) {\n              ctrl.queue = ctrl.queue.map(function (e) {\n                return _extends({}, e, {\n                  delay: e.delay + t\n                });\n              });\n              ctrl.start();\n            });\n          }\n        }\n      });\n    } else refs.reduce(function (q, _ref3, rI) {\n      var current = _ref3.current;\n      return q = q.then(function () {\n        return current.start();\n      });\n    }, Promise.resolve());\n    previous.current = refs;\n  });\n}\n\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an AnimatedValue is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\nfunction addAnimatedStyles(node, styles) {\n  if ('update' in node) {\n    styles.add(node);\n  } else {\n    node.getChildren().forEach(function (child) {\n      return addAnimatedStyles(child, styles);\n    });\n  }\n}\n\nvar AnimatedValue =\n/*#__PURE__*/\nfunction (_Animated) {\n  _inheritsLoose(AnimatedValue, _Animated);\n\n  function AnimatedValue(_value) {\n    var _this;\n\n    _this = _Animated.call(this) || this;\n    _this.animatedStyles = new Set();\n    _this.value = void 0;\n    _this.startPosition = void 0;\n    _this.lastPosition = void 0;\n    _this.lastVelocity = void 0;\n    _this.startTime = void 0;\n    _this.lastTime = void 0;\n    _this.done = false;\n\n    _this.setValue = function (value, flush) {\n      if (flush === void 0) {\n        flush = true;\n      }\n\n      _this.value = value;\n      if (flush) _this.flush();\n    };\n\n    _this.value = _value;\n    _this.startPosition = _value;\n    _this.lastPosition = _value;\n    return _this;\n  }\n\n  var _proto = AnimatedValue.prototype;\n\n  _proto.flush = function flush() {\n    if (this.animatedStyles.size === 0) {\n      addAnimatedStyles(this, this.animatedStyles);\n    }\n\n    this.animatedStyles.forEach(function (animatedStyle) {\n      return animatedStyle.update();\n    });\n  };\n\n  _proto.clearStyles = function clearStyles() {\n    this.animatedStyles.clear();\n  };\n\n  _proto.getValue = function getValue() {\n    return this.value;\n  };\n\n  _proto.interpolate = function interpolate(range, output) {\n    return new AnimatedInterpolation(this, range, output);\n  };\n\n  return AnimatedValue;\n}(Animated);\n\nvar AnimatedValueArray =\n/*#__PURE__*/\nfunction (_AnimatedArray) {\n  _inheritsLoose(AnimatedValueArray, _AnimatedArray);\n\n  function AnimatedValueArray(values) {\n    var _this;\n\n    _this = _AnimatedArray.call(this) || this;\n    _this.payload = values.map(function (n) {\n      return new AnimatedValue(n);\n    });\n    return _this;\n  }\n\n  var _proto = AnimatedValueArray.prototype;\n\n  _proto.setValue = function setValue(value, flush) {\n    var _this2 = this;\n\n    if (flush === void 0) {\n      flush = true;\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length === this.payload.length) {\n        value.forEach(function (v, i) {\n          return _this2.payload[i].setValue(v, flush);\n        });\n      }\n    } else {\n      this.payload.forEach(function (p) {\n        return p.setValue(value, flush);\n      });\n    }\n  };\n\n  _proto.getValue = function getValue() {\n    return this.payload.map(function (v) {\n      return v.getValue();\n    });\n  };\n\n  _proto.interpolate = function interpolate(range, output) {\n    return new AnimatedInterpolation(this, range, output);\n  };\n\n  return AnimatedValueArray;\n}(AnimatedArray);\n\nvar active = false;\nvar controllers = new Set();\n\nvar update = function update() {\n  if (!active) return;\n  var time = now();\n\n  for (var _iterator = controllers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var controller = _ref;\n    var isActive = false;\n\n    for (var configIdx = 0; configIdx < controller.configs.length; configIdx++) {\n      var config = controller.configs[configIdx];\n      var endOfAnimation = void 0,\n          lastTime = void 0;\n\n      for (var valIdx = 0; valIdx < config.animatedValues.length; valIdx++) {\n        var animation = config.animatedValues[valIdx]; // If an animation is done, skip, until all of them conclude\n\n        if (animation.done) continue;\n        var from = config.fromValues[valIdx];\n        var to = config.toValues[valIdx];\n        var position = animation.lastPosition;\n        var isAnimated = to instanceof Animated;\n        var velocity = Array.isArray(config.initialVelocity) ? config.initialVelocity[valIdx] : config.initialVelocity;\n        if (isAnimated) to = to.getValue(); // Conclude animation if it's either immediate, or from-values match end-state\n\n        if (config.immediate) {\n          animation.setValue(to);\n          animation.done = true;\n          continue;\n        } // Break animation when string values are involved\n\n\n        if (typeof from === 'string' || typeof to === 'string') {\n          animation.setValue(to);\n          animation.done = true;\n          continue;\n        }\n\n        if (config.duration !== void 0) {\n          /** Duration easing */\n          position = from + config.easing((time - animation.startTime) / config.duration) * (to - from);\n          endOfAnimation = time >= animation.startTime + config.duration;\n        } else if (config.decay) {\n          /** Decay easing */\n          position = from + velocity / (1 - 0.998) * (1 - Math.exp(-(1 - 0.998) * (time - controller.startTime)));\n          endOfAnimation = Math.abs(animation.lastPosition - position) < 0.1;\n          if (endOfAnimation) to = position;\n        } else {\n          /** Spring easing */\n          lastTime = animation.lastTime !== void 0 ? animation.lastTime : time;\n          velocity = animation.lastVelocity !== void 0 ? animation.lastVelocity : config.initialVelocity; // If we lost a lot of frames just jump to the end.\n\n          if (time > lastTime + 64) lastTime = time; // http://gafferongames.com/game-physics/fix-your-timestep/\n\n          var numSteps = Math.floor(time - lastTime);\n\n          for (var i = 0; i < numSteps; ++i) {\n            var force = -config.tension * (position - to);\n            var damping = -config.friction * velocity;\n            var acceleration = (force + damping) / config.mass;\n            velocity = velocity + acceleration * 1 / 1000;\n            position = position + velocity * 1 / 1000;\n          } // Conditions for stopping the spring animation\n\n\n          var isOvershooting = config.clamp && config.tension !== 0 ? from < to ? position > to : position < to : false;\n          var isVelocity = Math.abs(velocity) <= config.precision;\n          var isDisplacement = config.tension !== 0 ? Math.abs(to - position) <= config.precision : true;\n          endOfAnimation = isOvershooting || isVelocity && isDisplacement;\n          animation.lastVelocity = velocity;\n          animation.lastTime = time;\n        } // Trails aren't done until their parents conclude\n\n\n        if (isAnimated && !config.toValues[valIdx].done) endOfAnimation = false;\n\n        if (endOfAnimation) {\n          // Ensure that we end up with a round value\n          if (animation.value !== to) position = to;\n          animation.done = true;\n        } else isActive = true;\n\n        animation.setValue(position);\n        animation.lastPosition = position;\n      } // Keep track of updated values only when necessary\n\n\n      if (controller.props.onFrame) controller.values[config.name] = config.interpolation.getValue();\n    } // Update callbacks in the end of the frame\n\n\n    if (controller.props.onFrame) controller.props.onFrame(controller.values); // Either call onEnd or next frame\n\n    if (!isActive) {\n      controllers.delete(controller);\n      controller.stop(true);\n    }\n  } // Loop over as long as there are controllers ...\n\n\n  if (controllers.size) {\n    if (!manualFrameloop) requestFrame(update);\n  } else active = false;\n};\n\nvar start = function start(controller) {\n  if (!controllers.has(controller)) {\n    controllers.add(controller);\n    if (!active && !manualFrameloop) requestFrame(update);\n    active = true;\n  }\n};\n\nvar stop = function stop(controller) {\n  if (controllers.has(controller)) controllers.delete(controller);\n};\n\nvar G = 0;\n\nvar Controller =\n/*#__PURE__*/\nfunction () {\n  function Controller() {\n    var _this = this;\n\n    this.id = void 0;\n    this.idle = true;\n    this.hasChanged = false;\n    this.guid = 0;\n    this.local = 0;\n    this.props = {};\n    this.merged = {};\n    this.animations = {};\n    this.interpolations = {};\n    this.values = {};\n    this.configs = [];\n    this.listeners = [];\n    this.queue = [];\n    this.localQueue = void 0;\n\n    this.getValues = function () {\n      return _this.interpolations;\n    };\n\n    this.id = G++;\n  }\n  /** update(props)\n   *  This function filters input props and creates an array of tasks which are executed in .start()\n   *  Each task is allowed to carry a delay, which means it can execute asnychroneously */\n\n\n  var _proto = Controller.prototype;\n\n  _proto.update = function update$$1(args) {\n    var _this2 = this;\n\n    //this._id = n + this.id\n    if (!args) return this; // Extract delay and the to-prop from props\n\n    var _ref = interpolateTo(args),\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === void 0 ? 0 : _ref$delay,\n        to = _ref.to,\n        props = _objectWithoutPropertiesLoose(_ref, [\"delay\", \"to\"]);\n\n    if (is.arr(to) || is.fun(to)) {\n      // If config is either a function or an array queue it up as is\n      this.queue.push(_extends({}, props, {\n        delay: delay,\n        to: to\n      }));\n    } else if (to) {\n      // Otherwise go through each key since it could be delayed individually\n      var merge$$1 = {};\n      Object.entries(to).forEach(function (_ref2) {\n        var _to;\n\n        var k = _ref2[0],\n            v = _ref2[1];\n\n        // Fetch delay and create an entry, consisting of the to-props, the delay, and basic props\n        var entry = _extends({\n          to: (_to = {}, _to[k] = v, _to),\n          delay: callProp(delay, k)\n        }, props); // If it doesn't have a delay, merge it, otherwise add it to the queue\n\n\n        if (!entry.delay) merge$$1 = _extends({}, merge$$1, entry, {\n          to: _extends({}, merge$$1.to, entry.to)\n        });else _this2.queue = [].concat(_this2.queue, [entry]);\n      }); // Append merged props, if present\n\n      if (Object.keys(merge$$1).length > 0) this.queue = [].concat(this.queue, [merge$$1]);\n    } // Sort queue, so that async calls go last\n\n\n    this.queue = this.queue.sort(function (a, b) {\n      return a.delay - b.delay;\n    }); // Diff the reduced props immediately (they'll contain the from-prop and some config)\n\n    this.diff(props);\n    return this;\n  }\n  /** start(onEnd)\n   *  This function either executes a queue, if present, or starts the frameloop, which animates */\n  ;\n\n  _proto.start = function start$$1(onEnd) {\n    var _this3 = this;\n\n    // If a queue is present we must excecute it\n    if (this.queue.length) {\n      this.idle = false; // Updates can interrupt trailing queues, in that case we just merge values\n\n      if (this.localQueue) {\n        this.localQueue.forEach(function (_ref3) {\n          var _ref3$from = _ref3.from,\n              from = _ref3$from === void 0 ? {} : _ref3$from,\n              _ref3$to = _ref3.to,\n              to = _ref3$to === void 0 ? {} : _ref3$to;\n          if (is.obj(from)) _this3.merged = _extends({}, from, _this3.merged);\n          if (is.obj(to)) _this3.merged = _extends({}, _this3.merged, to);\n        });\n      } // The guid helps us tracking frames, a new queue over an old one means an override\n      // We discard async calls in that caseÍ\n\n\n      var local = this.local = ++this.guid;\n      var queue = this.localQueue = this.queue;\n      this.queue = []; // Go through each entry and execute it\n\n      queue.forEach(function (_ref4, index) {\n        var delay = _ref4.delay,\n            props = _objectWithoutPropertiesLoose(_ref4, [\"delay\"]);\n\n        var cb = function cb(finished) {\n          if (index === queue.length - 1 && local === _this3.guid && finished) {\n            _this3.idle = true;\n            if (_this3.props.onRest) _this3.props.onRest(_this3.merged);\n          }\n\n          if (onEnd) onEnd();\n        }; // Entries can be delayed, ansyc or immediate\n\n\n        var async = is.arr(props.to) || is.fun(props.to);\n\n        if (delay) {\n          setTimeout(function () {\n            if (local === _this3.guid) {\n              if (async) _this3.runAsync(props, cb);else _this3.diff(props).start(cb);\n            }\n          }, delay);\n        } else if (async) _this3.runAsync(props, cb);else _this3.diff(props).start(cb);\n      });\n    } // Otherwise we kick of the frameloop\n    else {\n        if (is.fun(onEnd)) this.listeners.push(onEnd);\n        if (this.props.onStart) this.props.onStart();\n\n        start(this);\n      }\n\n    return this;\n  };\n\n  _proto.stop = function stop$$1(finished) {\n    this.listeners.forEach(function (onEnd) {\n      return onEnd(finished);\n    });\n    this.listeners = [];\n    return this;\n  }\n  /** Pause sets onEnd listeners free, but also removes the controller from the frameloop */\n  ;\n\n  _proto.pause = function pause(finished) {\n    this.stop(true);\n    if (finished) stop(this);\n    return this;\n  };\n\n  _proto.runAsync = function runAsync(_ref5, onEnd) {\n    var _this4 = this;\n\n    var delay = _ref5.delay,\n        props = _objectWithoutPropertiesLoose(_ref5, [\"delay\"]);\n\n    var local = this.local; // If \"to\" is either a function or an array it will be processed async, therefor \"to\" should be empty right now\n    // If the view relies on certain values \"from\" has to be present\n\n    var queue = Promise.resolve(undefined);\n\n    if (is.arr(props.to)) {\n      var _loop = function _loop(i) {\n        var index = i;\n\n        var fresh = _extends({}, props, interpolateTo(props.to[index]));\n\n        if (is.arr(fresh.config)) fresh.config = fresh.config[index];\n        queue = queue.then(function () {\n          //this.stop()\n          if (local === _this4.guid) return new Promise(function (r) {\n            return _this4.diff(fresh).start(r);\n          });\n        });\n      };\n\n      for (var i = 0; i < props.to.length; i++) {\n        _loop(i);\n      }\n    } else if (is.fun(props.to)) {\n      var index = 0;\n      var last;\n      queue = queue.then(function () {\n        return props.to( // next(props)\n        function (p) {\n          var fresh = _extends({}, props, interpolateTo(p));\n\n          if (is.arr(fresh.config)) fresh.config = fresh.config[index];\n          index++; //this.stop()\n\n          if (local === _this4.guid) return last = new Promise(function (r) {\n            return _this4.diff(fresh).start(r);\n          });\n          return;\n        }, // cancel()\n        function (finished) {\n          if (finished === void 0) {\n            finished = true;\n          }\n\n          return _this4.stop(finished);\n        }).then(function () {\n          return last;\n        });\n      });\n    }\n\n    queue.then(onEnd);\n  };\n\n  _proto.diff = function diff(props) {\n    var _this5 = this;\n\n    this.props = _extends({}, this.props, props);\n    var _this$props = this.props,\n        _this$props$from = _this$props.from,\n        from = _this$props$from === void 0 ? {} : _this$props$from,\n        _this$props$to = _this$props.to,\n        to = _this$props$to === void 0 ? {} : _this$props$to,\n        _this$props$config = _this$props.config,\n        config = _this$props$config === void 0 ? {} : _this$props$config,\n        reverse = _this$props.reverse,\n        attach = _this$props.attach,\n        reset = _this$props.reset,\n        immediate = _this$props.immediate; // Reverse values when requested\n\n    if (reverse) {\n      var _ref6 = [to, from];\n      from = _ref6[0];\n      to = _ref6[1];\n    } // This will collect all props that were ever set, reset merged props when necessary\n\n\n    this.merged = _extends({}, from, this.merged, to);\n    this.hasChanged = false; // Attachment handling, trailed springs can \"attach\" themselves to a previous spring\n\n    var target = attach && attach(this); // Reduces input { name: value } pairs into animated values\n\n    this.animations = Object.entries(this.merged).reduce(function (acc, _ref7) {\n      var name = _ref7[0],\n          value = _ref7[1];\n      // Issue cached entries, except on reset\n      var entry = acc[name] || {}; // Figure out what the value is supposed to be\n\n      var isNumber = is.num(value);\n      var isString = is.str(value) && !value.startsWith('#') && !/\\d/.test(value) && !colorNames[value];\n      var isArray = is.arr(value);\n      var isInterpolation = !isNumber && !isArray && !isString;\n      var fromValue = !is.und(from[name]) ? from[name] : value;\n      var toValue = isNumber || isArray ? value : isString ? value : 1;\n      var toConfig = callProp(config, name);\n      if (target) toValue = target.animations[name].parent;\n      var parent = entry.parent,\n          interpolation$$1 = entry.interpolation,\n          toValues = toArray(target ? toValue.getPayload() : toValue),\n          animatedValues;\n      var newValue = value;\n      if (isInterpolation) newValue = interpolation({\n        range: [0, 1],\n        output: [value, value]\n      })(1);\n      var currentValue = interpolation$$1 && interpolation$$1.getValue(); // Change detection flags\n\n      var isFirst = is.und(parent);\n      var isActive = !isFirst && entry.animatedValues.some(function (v) {\n        return !v.done;\n      });\n      var currentValueDiffersFromGoal = !is.equ(newValue, currentValue);\n      var hasNewGoal = !is.equ(newValue, entry.previous);\n      var hasNewConfig = !is.equ(toConfig, entry.config); // Change animation props when props indicate a new goal (new value differs from previous one)\n      // and current values differ from it. Config changes trigger a new update as well (though probably shouldn't?)\n\n      if (reset || hasNewGoal && currentValueDiffersFromGoal || hasNewConfig) {\n        var _extends2;\n\n        // Convert regular values into animated values, ALWAYS re-use if possible\n        if (isNumber || isString) parent = interpolation$$1 = entry.parent || new AnimatedValue(fromValue);else if (isArray) parent = interpolation$$1 = entry.parent || new AnimatedValueArray(fromValue);else if (isInterpolation) {\n          var prev = entry.interpolation && entry.interpolation.calc(entry.parent.value);\n          prev = prev !== void 0 && !reset ? prev : fromValue;\n\n          if (entry.parent) {\n            parent = entry.parent;\n            parent.setValue(0, false);\n          } else parent = new AnimatedValue(0);\n\n          var range = {\n            output: [prev, value]\n          };\n\n          if (entry.interpolation) {\n            interpolation$$1 = entry.interpolation;\n            entry.interpolation.updateConfig(range);\n          } else interpolation$$1 = parent.interpolate(range);\n        }\n        toValues = toArray(target ? toValue.getPayload() : toValue);\n        animatedValues = toArray(parent.getPayload());\n        if (reset && !isInterpolation) parent.setValue(fromValue, false);\n        _this5.hasChanged = true; // Reset animated values\n\n        animatedValues.forEach(function (value) {\n          value.startPosition = value.value;\n          value.lastPosition = value.value;\n          value.lastVelocity = isActive ? value.lastVelocity : undefined;\n          value.lastTime = isActive ? value.lastTime : undefined;\n          value.startTime = now();\n          value.done = false;\n          value.animatedStyles.clear();\n        }); // Set immediate values\n\n        if (callProp(immediate, name)) {\n          parent.setValue(isInterpolation ? toValue : value, false);\n        }\n\n        return _extends({}, acc, (_extends2 = {}, _extends2[name] = _extends({}, entry, {\n          name: name,\n          parent: parent,\n          interpolation: interpolation$$1,\n          animatedValues: animatedValues,\n          toValues: toValues,\n          previous: newValue,\n          config: toConfig,\n          fromValues: toArray(parent.getValue()),\n          immediate: callProp(immediate, name),\n          initialVelocity: withDefault(toConfig.velocity, 0),\n          clamp: withDefault(toConfig.clamp, false),\n          precision: withDefault(toConfig.precision, 0.01),\n          tension: withDefault(toConfig.tension, 170),\n          friction: withDefault(toConfig.friction, 26),\n          mass: withDefault(toConfig.mass, 1),\n          duration: toConfig.duration,\n          easing: withDefault(toConfig.easing, function (t) {\n            return t;\n          }),\n          decay: toConfig.decay\n        }), _extends2));\n      } else {\n        if (!currentValueDiffersFromGoal) {\n          var _extends3;\n\n          // So ... the current target value (newValue) appears to be different from the previous value,\n          // which normally constitutes an update, but the actual value (currentValue) matches the target!\n          // In order to resolve this without causing an animation update we silently flag the animation as done,\n          // which it technically is. Interpolations also needs a config update with their target set to 1.\n          if (isInterpolation) {\n            parent.setValue(1, false);\n            interpolation$$1.updateConfig({\n              output: [newValue, newValue]\n            });\n          }\n\n          parent.done = true;\n          _this5.hasChanged = true;\n          return _extends({}, acc, (_extends3 = {}, _extends3[name] = _extends({}, acc[name], {\n            previous: newValue\n          }), _extends3));\n        }\n\n        return acc;\n      }\n    }, this.animations);\n\n    if (this.hasChanged) {\n      // Make animations available to frameloop\n      this.configs = Object.values(this.animations);\n      this.values = {};\n      this.interpolations = {};\n\n      for (var key in this.animations) {\n        this.interpolations[key] = this.animations[key].interpolation;\n        this.values[key] = this.animations[key].interpolation.getValue();\n      }\n    }\n\n    return this;\n  };\n\n  _proto.destroy = function destroy() {\n    this.stop();\n    this.props = {};\n    this.merged = {};\n    this.animations = {};\n    this.interpolations = {};\n    this.values = {};\n    this.configs = [];\n    this.local = 0;\n  };\n\n  return Controller;\n}();\n\n/** API\n * const props = useSprings(number, [{ ... }, { ... }, ...])\n * const [props, set] = useSprings(number, (i, controller) => ({ ... }))\n */\n\nvar useSprings = function useSprings(length, props) {\n  var mounted = React.useRef(false);\n  var ctrl = React.useRef();\n  var isFn = is.fun(props); // The controller maintains the animation values, starts and stops animations\n\n  var _useMemo = React.useMemo(function () {\n    // Remove old controllers\n    if (ctrl.current) {\n      ctrl.current.map(function (c) {\n        return c.destroy();\n      });\n      ctrl.current = undefined;\n    }\n\n    var ref;\n    return [new Array(length).fill().map(function (_, i) {\n      var ctrl = new Controller();\n      var newProps = isFn ? callProp(props, i, ctrl) : props[i];\n      if (i === 0) ref = newProps.ref;\n      ctrl.update(newProps);\n      if (!ref) ctrl.start();\n      return ctrl;\n    }), ref];\n  }, [length]),\n      controllers = _useMemo[0],\n      ref = _useMemo[1];\n\n  ctrl.current = controllers; // The hooks reference api gets defined here ...\n\n  var api = React.useImperativeHandle(ref, function () {\n    return {\n      start: function start() {\n        return Promise.all(ctrl.current.map(function (c) {\n          return new Promise(function (r) {\n            return c.start(r);\n          });\n        }));\n      },\n      stop: function stop(finished) {\n        return ctrl.current.forEach(function (c) {\n          return c.stop(finished);\n        });\n      },\n\n      get controllers() {\n        return ctrl.current;\n      }\n\n    };\n  }); // This function updates the controllers\n\n  var updateCtrl = React.useMemo(function () {\n    return function (updateProps) {\n      return ctrl.current.map(function (c, i) {\n        c.update(isFn ? callProp(updateProps, i, c) : updateProps[i]);\n        if (!ref) c.start();\n      });\n    };\n  }, [length]); // Update controller if props aren't functional\n\n  React.useEffect(function () {\n    if (mounted.current) {\n      if (!isFn) updateCtrl(props);\n    } else if (!ref) ctrl.current.forEach(function (c) {\n      return c.start();\n    });\n  }); // Update mounted flag and destroy controller on unmount\n\n  React.useEffect(function () {\n    return mounted.current = true, function () {\n      return ctrl.current.forEach(function (c) {\n        return c.destroy();\n      });\n    };\n  }, []); // Return animated props, or, anim-props + the update-setter above\n\n  var propValues = ctrl.current.map(function (c) {\n    return c.getValues();\n  });\n  return isFn ? [propValues, updateCtrl, function (finished) {\n    return ctrl.current.forEach(function (c) {\n      return c.pause(finished);\n    });\n  }] : propValues;\n};\n\n/** API\n * const props = useSpring({ ... })\n * const [props, set] = useSpring(() => ({ ... }))\n */\n\nvar useSpring = function useSpring(props) {\n  var isFn = is.fun(props);\n\n  var _useSprings = useSprings(1, isFn ? props : [props]),\n      result = _useSprings[0],\n      set = _useSprings[1],\n      pause = _useSprings[2];\n\n  return isFn ? [result[0], set, pause] : result;\n};\n\n/** API\n * const trails = useTrail(number, { ... })\n * const [trails, set] = useTrail(number, () => ({ ... }))\n */\n\nvar useTrail = function useTrail(length, props) {\n  var mounted = React.useRef(false);\n  var isFn = is.fun(props);\n  var updateProps = callProp(props);\n  var instances = React.useRef();\n\n  var _useSprings = useSprings(length, function (i, ctrl) {\n    if (i === 0) instances.current = [];\n    instances.current.push(ctrl);\n    return _extends({}, updateProps, {\n      config: callProp(updateProps.config, i),\n      attach: i > 0 && function () {\n        return instances.current[i - 1];\n      }\n    });\n  }),\n      result = _useSprings[0],\n      set = _useSprings[1],\n      pause = _useSprings[2]; // Set up function to update controller\n\n\n  var updateCtrl = React.useMemo(function () {\n    return function (props) {\n      return set(function (i, ctrl) {\n        var last = props.reverse ? i === 0 : length - 1 === i;\n        var attachIdx = props.reverse ? i + 1 : i - 1;\n        var attachController = instances.current[attachIdx];\n        return _extends({}, props, {\n          config: callProp(props.config || updateProps.config, i),\n          attach: attachController && function () {\n            return attachController;\n          }\n        });\n      });\n    };\n  }, [length, updateProps.reverse]); // Update controller if props aren't functional\n\n  React.useEffect(function () {\n    return void (mounted.current && !isFn && updateCtrl(props));\n  }); // Update mounted flag and destroy controller on unmount\n\n  React.useEffect(function () {\n    return void (mounted.current = true);\n  }, []);\n  return isFn ? [result, updateCtrl, pause] : result;\n};\n\n/** API\n * const transitions = useTransition(items, itemKeys, { ... })\n * const [transitions, update] = useTransition(items, itemKeys, () => ({ ... }))\n */\n\nvar guid = 0;\nvar ENTER = 'enter';\nvar LEAVE = 'leave';\nvar UPDATE = 'update';\n\nvar mapKeys = function mapKeys(items, keys) {\n  return (typeof keys === 'function' ? items.map(keys) : toArray(keys)).map(String);\n};\n\nvar get = function get(props) {\n  var items = props.items,\n      _props$keys = props.keys,\n      keys = _props$keys === void 0 ? function (item) {\n    return item;\n  } : _props$keys,\n      rest = _objectWithoutPropertiesLoose(props, [\"items\", \"keys\"]);\n\n  items = toArray(items !== void 0 ? items : null);\n  return _extends({\n    items: items,\n    keys: mapKeys(items, keys)\n  }, rest);\n};\n\nfunction useTransition(input, keyTransform, config) {\n  var props = _extends({\n    items: input,\n    keys: keyTransform || function (i) {\n      return i;\n    }\n  }, config);\n\n  var _get = get(props),\n      _get$lazy = _get.lazy,\n      lazy = _get$lazy === void 0 ? false : _get$lazy,\n      _get$unique = _get.unique,\n      _get$reset = _get.reset,\n      reset = _get$reset === void 0 ? false : _get$reset,\n      enter = _get.enter,\n      leave = _get.leave,\n      update = _get.update,\n      onDestroyed = _get.onDestroyed,\n      keys = _get.keys,\n      items = _get.items,\n      onFrame = _get.onFrame,\n      _onRest = _get.onRest,\n      onStart = _get.onStart,\n      ref = _get.ref,\n      extra = _objectWithoutPropertiesLoose(_get, [\"lazy\", \"unique\", \"reset\", \"enter\", \"leave\", \"update\", \"onDestroyed\", \"keys\", \"items\", \"onFrame\", \"onRest\", \"onStart\", \"ref\"]);\n\n  var forceUpdate = useForceUpdate();\n  var mounted = React.useRef(false);\n  var state = React.useRef({\n    mounted: false,\n    first: true,\n    deleted: [],\n    current: {},\n    transitions: [],\n    prevProps: {},\n    paused: !!props.ref,\n    instances: !mounted.current && new Map(),\n    forceUpdate: forceUpdate\n  });\n  React.useImperativeHandle(props.ref, function () {\n    return {\n      start: function start() {\n        return Promise.all(Array.from(state.current.instances).map(function (_ref) {\n          var c = _ref[1];\n          return new Promise(function (r) {\n            return c.start(r);\n          });\n        }));\n      },\n      stop: function stop(finished) {\n        return Array.from(state.current.instances).forEach(function (_ref2) {\n          var c = _ref2[1];\n          return c.stop(finished);\n        });\n      },\n\n      get controllers() {\n        return Array.from(state.current.instances).map(function (_ref3) {\n          var c = _ref3[1];\n          return c;\n        });\n      }\n\n    };\n  }); // Update state\n\n  state.current = diffItems(state.current, props);\n\n  if (state.current.changed) {\n    // Update state\n    state.current.transitions.forEach(function (transition) {\n      var slot = transition.slot,\n          from = transition.from,\n          to = transition.to,\n          config = transition.config,\n          trail = transition.trail,\n          key = transition.key,\n          item = transition.item;\n      if (!state.current.instances.has(key)) state.current.instances.set(key, new Controller()); // update the map object\n\n      var ctrl = state.current.instances.get(key);\n\n      var newProps = _extends({}, extra, {\n        to: to,\n        from: from,\n        config: config,\n        ref: ref,\n        onRest: function onRest(values) {\n          if (state.current.mounted) {\n            if (transition.destroyed) {\n              // If no ref is given delete destroyed items immediately\n              if (!ref && !lazy) cleanUp(state, key);\n              if (onDestroyed) onDestroyed(item);\n            } // A transition comes to rest once all its springs conclude\n\n\n            var curInstances = Array.from(state.current.instances);\n            var active = curInstances.some(function (_ref4) {\n              var c = _ref4[1];\n              return !c.idle;\n            });\n            if (!active && (ref || lazy) && state.current.deleted.length > 0) cleanUp(state);\n            if (_onRest) _onRest(item, slot, values);\n          }\n        },\n        onStart: onStart && function () {\n          return onStart(item, slot);\n        },\n        onFrame: onFrame && function (values) {\n          return onFrame(item, slot, values);\n        },\n        delay: trail,\n        reset: reset && slot === ENTER // Update controller\n\n      });\n\n      ctrl.update(newProps);\n      if (!state.current.paused) ctrl.start();\n    });\n  }\n\n  React.useEffect(function () {\n    state.current.mounted = mounted.current = true;\n    return function () {\n      state.current.mounted = mounted.current = false;\n      Array.from(state.current.instances).map(function (_ref5) {\n        var c = _ref5[1];\n        return c.destroy();\n      });\n      state.current.instances.clear();\n    };\n  }, []);\n  return state.current.transitions.map(function (_ref6) {\n    var item = _ref6.item,\n        slot = _ref6.slot,\n        key = _ref6.key;\n    return {\n      item: item,\n      key: key,\n      state: slot,\n      props: state.current.instances.get(key).getValues()\n    };\n  });\n}\n\nfunction cleanUp(state, filterKey) {\n  var deleted = state.current.deleted;\n\n  var _loop = function _loop() {\n    if (_isArray) {\n      if (_i >= _iterator.length) return \"break\";\n      _ref8 = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) return \"break\";\n      _ref8 = _i.value;\n    }\n\n    var _ref7 = _ref8;\n    var key = _ref7.key;\n\n    var filter = function filter(t) {\n      return t.key !== key;\n    };\n\n    if (is.und(filterKey) || filterKey === key) {\n      state.current.instances.delete(key);\n      state.current.transitions = state.current.transitions.filter(filter);\n      state.current.deleted = state.current.deleted.filter(filter);\n    }\n  };\n\n  for (var _iterator = deleted, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref8;\n\n    var _ret = _loop();\n\n    if (_ret === \"break\") break;\n  }\n\n  state.current.forceUpdate();\n}\n\nfunction diffItems(_ref9, props) {\n  var first = _ref9.first,\n      prevProps = _ref9.prevProps,\n      state = _objectWithoutPropertiesLoose(_ref9, [\"first\", \"prevProps\"]);\n\n  var _get2 = get(props),\n      items = _get2.items,\n      keys = _get2.keys,\n      initial = _get2.initial,\n      from = _get2.from,\n      enter = _get2.enter,\n      leave = _get2.leave,\n      update = _get2.update,\n      _get2$trail = _get2.trail,\n      trail = _get2$trail === void 0 ? 0 : _get2$trail,\n      unique = _get2.unique,\n      config = _get2.config,\n      _get2$order = _get2.order,\n      order = _get2$order === void 0 ? [ENTER, LEAVE, UPDATE] : _get2$order;\n\n  var _get3 = get(prevProps),\n      _keys = _get3.keys,\n      _items = _get3.items;\n\n  var current = _extends({}, state.current);\n\n  var deleted = [].concat(state.deleted); // Compare next keys with current keys\n\n  var currentKeys = Object.keys(current);\n  var currentSet = new Set(currentKeys);\n  var nextSet = new Set(keys);\n  var added = keys.filter(function (item) {\n    return !currentSet.has(item);\n  });\n  var removed = state.transitions.filter(function (item) {\n    return !item.destroyed && !nextSet.has(item.originalKey);\n  }).map(function (i) {\n    return i.originalKey;\n  });\n  var updated = keys.filter(function (item) {\n    return currentSet.has(item);\n  });\n  var delay = -trail;\n\n  while (order.length) {\n    var changeType = order.shift();\n\n    switch (changeType) {\n      case ENTER:\n        {\n          added.forEach(function (key, index) {\n            // In unique mode, remove fading out transitions if their key comes in again\n            if (unique && deleted.find(function (d) {\n              return d.originalKey === key;\n            })) deleted = deleted.filter(function (t) {\n              return t.originalKey !== key;\n            });\n            var keyIndex = keys.indexOf(key);\n            var item = items[keyIndex];\n            var slot = first && initial !== void 0 ? 'initial' : ENTER;\n            current[key] = {\n              slot: slot,\n              originalKey: key,\n              key: unique ? String(key) : guid++,\n              item: item,\n              trail: delay = delay + trail,\n              config: callProp(config, item, slot),\n              from: callProp(first ? initial !== void 0 ? initial || {} : from : from, item),\n              to: callProp(enter, item)\n            };\n          });\n          break;\n        }\n\n      case LEAVE:\n        {\n          removed.forEach(function (key) {\n            var keyIndex = _keys.indexOf(key);\n\n            var item = _items[keyIndex];\n            var slot = LEAVE;\n            deleted.unshift(_extends({}, current[key], {\n              slot: slot,\n              destroyed: true,\n              left: _keys[Math.max(0, keyIndex - 1)],\n              right: _keys[Math.min(_keys.length, keyIndex + 1)],\n              trail: delay = delay + trail,\n              config: callProp(config, item, slot),\n              to: callProp(leave, item)\n            }));\n            delete current[key];\n          });\n          break;\n        }\n\n      case UPDATE:\n        {\n          updated.forEach(function (key) {\n            var keyIndex = keys.indexOf(key);\n            var item = items[keyIndex];\n            var slot = UPDATE;\n            current[key] = _extends({}, current[key], {\n              item: item,\n              slot: slot,\n              trail: delay = delay + trail,\n              config: callProp(config, item, slot),\n              to: callProp(update, item)\n            });\n          });\n          break;\n        }\n    }\n  }\n\n  var out = keys.map(function (key) {\n    return current[key];\n  }); // This tries to restore order for deleted items by finding their last known siblings\n  // only using the left sibling to keep order placement consistent for all deleted items\n\n  deleted.forEach(function (_ref10) {\n    var left = _ref10.left,\n        right = _ref10.right,\n        item = _objectWithoutPropertiesLoose(_ref10, [\"left\", \"right\"]);\n\n    var pos; // Was it the element on the left, if yes, move there ...\n\n    if ((pos = out.findIndex(function (t) {\n      return t.originalKey === left;\n    })) !== -1) pos += 1; // And if nothing else helps, move it to the start ¯\\_(ツ)_/¯\n\n    pos = Math.max(0, pos);\n    out = [].concat(out.slice(0, pos), [item], out.slice(pos));\n  });\n  return _extends({}, state, {\n    changed: added.length || removed.length || updated.length,\n    first: first && added.length === 0,\n    transitions: out,\n    current: current,\n    deleted: deleted,\n    prevProps: props\n  });\n}\n\n// Solution: https://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly/658662\n\nvar stringShapeRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n\nvar createStringInterpolator = function createStringInterpolator(config$$1) {\n  var outputRange = config$$1.output;\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      return outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (_, i) {\n    return createInterpolator(_extends({}, config$$1, {\n      output: outputRanges[i]\n    }));\n  });\n  return function (input) {\n    var i = 0;\n    return outputRange[0].replace(stringShapeRegex, function () {\n      return interpolations[i++](input);\n    });\n  };\n};\n\ninjectStringInterpolator(createStringInterpolator);\ninjectApplyAnimatedValues(function () {\n  return false;\n}, function (style) {\n  return style;\n});\nvar apply = merge(createAnimatedComponent, false);\nvar Interpolation = {\n  create: createInterpolator\n};\n\nexports.apply = apply;\nexports.config = config;\nexports.animated = createAnimatedComponent;\nexports.interpolate = interpolate$1;\nexports.Globals = Globals;\nexports.useSpring = useSpring;\nexports.useTrail = useTrail;\nexports.useTransition = useTransition;\nexports.useChain = useChain;\nexports.useSprings = useSprings;\nexports.Interpolation = Interpolation;\n","import React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar touchMove = 'touchmove';\nvar touchEnd = 'touchend';\nvar mouseMove = 'mousemove';\nvar mouseUp = 'mouseup';\nvar defaultProps = {\n  touch: true,\n  mouse: true,\n  passive: {\n    passive: true\n  },\n  onAction: undefined,\n  onDown: undefined,\n  onUp: undefined,\n  onMove: undefined\n};\nvar initialState = {\n  event: undefined,\n  args: undefined,\n  temp: undefined,\n  target: undefined,\n  time: undefined,\n  xy: [0, 0],\n  delta: [0, 0],\n  initial: [0, 0],\n  previous: [0, 0],\n  direction: [0, 0],\n  local: [0, 0],\n  lastLocal: [0, 0],\n  velocity: 0,\n  distance: 0,\n  down: false,\n  first: true,\n  shiftKey: false\n};\n\nfunction handlers(set, props, args) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  // Common handlers\n  var handleUp = function handleUp(event, shiftKey) {\n    set(function (state) {\n      var newProps = _extends({}, state, {\n        down: false,\n        first: false\n      });\n\n      var temp = props.onAction && props.onAction(newProps);\n      if (props.onUp) props.onUp(newProps);\n      return _extends({}, newProps, {\n        event: event,\n        shiftKey: shiftKey,\n        lastLocal: state.local,\n        temp: temp || newProps.temp\n      });\n    });\n  };\n\n  var handleDown = function handleDown(event) {\n    var _ref = event.touches ? event.touches[0] : event,\n        target = _ref.target,\n        pageX = _ref.pageX,\n        pageY = _ref.pageY,\n        shiftKey = _ref.shiftKey;\n\n    set(function (state) {\n      var lastLocal = state.lastLocal || initialState.lastLocal;\n\n      var newProps = _extends({}, initialState, {\n        event: event,\n        target: target,\n        args: args,\n        lastLocal: lastLocal,\n        shiftKey: shiftKey,\n        local: lastLocal,\n        xy: [pageX, pageY],\n        initial: [pageX, pageY],\n        previous: [pageX, pageY],\n        down: true,\n        time: Date.now(),\n        cancel: function cancel() {\n          stop();\n          requestAnimationFrame(function () {\n            return handleUp(event);\n          });\n        }\n      });\n\n      var temp = props.onAction && props.onAction(newProps);\n      if (props.onDown) props.onDown(newProps);\n      return _extends({}, newProps, {\n        temp: temp\n      });\n    });\n  };\n\n  var handleMove = function handleMove(event) {\n    var _ref2 = event.touches ? event.touches[0] : event,\n        pageX = _ref2.pageX,\n        pageY = _ref2.pageY,\n        shiftKey = _ref2.shiftKey;\n\n    set(function (state) {\n      var time = Date.now();\n      var x_dist = pageX - state.xy[0];\n      var y_dist = pageY - state.xy[1];\n      var delta_x = pageX - state.initial[0];\n      var delta_y = pageY - state.initial[1];\n      var distance = Math.sqrt(delta_x * delta_x + delta_y * delta_y);\n      var len = Math.sqrt(x_dist * x_dist + y_dist * y_dist);\n      var scalar = 1 / (len || 1);\n\n      var newProps = _extends({}, state, {\n        event: event,\n        time: time,\n        shiftKey: shiftKey,\n        xy: [pageX, pageY],\n        delta: [delta_x, delta_y],\n        local: [state.lastLocal[0] + pageX - state.initial[0], state.lastLocal[1] + pageY - state.initial[1]],\n        velocity: len / (time - state.time),\n        distance: distance,\n        direction: [x_dist * scalar, y_dist * scalar],\n        previous: state.xy,\n        first: false\n      });\n\n      var temp = props.onAction && props.onAction(newProps);\n      if (props.onMove) props.onMove(newProps);\n      return _extends({}, newProps, {\n        temp: temp || newProps.temp\n      });\n    });\n  };\n\n  var onDown = function onDown(e) {\n    if (props.mouse) {\n      window.addEventListener(mouseMove, handleMove, props.passive);\n      window.addEventListener(mouseUp, onUp, props.passive);\n    }\n\n    if (props.touch) {\n      window.addEventListener(touchMove, handleMove, props.passive);\n      window.addEventListener(touchEnd, onUp, props.passive);\n    }\n\n    handleDown(e);\n  };\n\n  var stop = function stop() {\n    if (props.mouse) {\n      window.removeEventListener(mouseMove, handleMove, props.passive);\n      window.removeEventListener(mouseUp, onUp, props.passive);\n    }\n\n    if (props.touch) {\n      window.removeEventListener(touchMove, handleMove, props.passive);\n      window.removeEventListener(touchEnd, onUp, props.passive);\n    }\n  };\n\n  var onUp = function onUp(e) {\n    var shiftKey = e.shiftKey;\n    stop();\n    handleUp(e, shiftKey);\n  };\n\n  var output = {};\n  var capture = props.passive.capture ? 'Capture' : '';\n\n  if (props.mouse) {\n    output[\"onMouseDown\" + capture] = onDown;\n  }\n\n  if (props.touch) {\n    output[\"onTouchStart\" + capture] = onDown;\n  }\n\n  return output;\n}\n\nvar Gesture =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Gesture, _React$Component);\n\n  function Gesture(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = initialState;\n\n    var set = _this.setState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (props.onAction) {\n      _this._state = initialState;\n\n      set = function set(cb) {\n        return _this._state = cb(_this._state);\n      };\n    }\n\n    _this.handlers = handlers(set, props);\n    return _this;\n  }\n\n  var _proto = Gesture.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        style = _this$props.style,\n        children = _this$props.children,\n        className = _this$props.className;\n    return React.createElement(\"div\", _extends({}, this.handlers, {\n      style: _extends({\n        display: 'contents'\n      }, style),\n      className: className\n    }), children(this.state));\n  };\n\n  return Gesture;\n}(React.Component);\n\nGesture.defaultProps = defaultProps;\n\nvar withGesture = function withGesture(config) {\n  return function (Wrapped) {\n    return function (props) {\n      return React.createElement(Gesture, _extends({}, config, {\n        children: function children(gestureProps) {\n          return React.createElement(Wrapped, _extends({}, props, gestureProps));\n        }\n      }));\n    };\n  };\n};\n\nfunction useGesture(props) {\n  var _React$useState = React.useState(initialState),\n      state = _React$useState[0],\n      set = _React$useState[1];\n\n  var transientState = React.useRef(initialState);\n  if (typeof props === 'function') props = {\n    onAction: props\n  };\n  props = _extends({}, defaultProps, props);\n\n  var _React$useState2 = React.useState(function () {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return handlers(props.onAction ? function (cb) {\n        return transientState.current = cb(transientState.current);\n      } : set, props, args);\n    };\n  }),\n      spread = _React$useState2[0];\n\n  return props.onAction ? spread : [spread, state];\n}\n\nexport { withGesture, Gesture, useGesture };\n"],"sourceRoot":""}