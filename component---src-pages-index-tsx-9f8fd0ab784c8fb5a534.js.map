{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/textLoop/index.tsx","webpack:///./src/structures/Theme/index.ts","webpack:///./src/containers/index/hellojs.tsx","webpack:///./src/components/button/index.tsx","webpack:///./src/containers/index/mochi.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","cx","classNames","bind","styles","TextLoop","_ref","className","queue","interval","style","_useState","useState","index","setIndex","_useState2","width","height","size","setSize","useRef","currentRaf","useEffect","length","start","performance","now","current","RequestAnimeFrame","tick","cancel","nextQueue","nextIndex","transitions","useTransition","item","native","from","opacity","transform","enter","leave","onFrame","action","currentItem","offsetWidth","offsetHeight","react_default","a","createElement","Object","assign","map","_ref2","props","key","web_cjs","div","ref","defaultProps","ThemeType","Hellojs","render","textLoop","Component","Button","renderButton","_this$props","_this","children","theme","disabled","rounded","href","target","onClick","objectWithoutPropertiesLoose_default","undefined","anchorClass","buttonClass","this","Light","mochi","_cx","onToggle","_useSpring","useSpring","xy","config","mass","tension","friction","onRest","set","useGesture","down","delta","distance","interpolate","x","y","cursor","IndexPage","hellojs","components_button","navigate","aria-disabled","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","propTypes","shape"],"mappings":"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","file":"component---src-pages-index-tsx-9f8fd0ab784c8fb5a534.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  CSSProperties,\r\n  FunctionComponent\r\n} from \"react\";\r\nimport { useTransition, animated } from \"react-spring/web.cjs\";\r\nimport classNames from \"classnames/bind\";\r\nimport RequestAnimeFrame from \"raf\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ninterface TextLoopProps {\r\n  queue: string[];\r\n  interval?: number;\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst TextLoop: FunctionComponent<TextLoopProps> = ({\r\n  className,\r\n  queue,\r\n  interval,\r\n  style\r\n}) => {\r\n  // state\r\n  const [index, setIndex] = useState(0);\r\n  const [size, setSize] = useState({ width: 0, height: 0 });\r\n  const bind = useRef(null);\r\n  const currentRaf = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (queue.length > 1) {\r\n      // set current tick of Raf\r\n      const start = performance.now();\r\n      currentRaf.current = RequestAnimeFrame(() => tick(start));\r\n    }\r\n    return () => {\r\n      // unmount cancel to tick\r\n      RequestAnimeFrame.cancel(currentRaf.current);\r\n    };\r\n  }, [index]);\r\n\r\n  const tick = start => {\r\n    const currTime = performance.now() - start;\r\n    if (currTime > interval) {\r\n      nextQueue();\r\n    } else {\r\n      currentRaf.current = RequestAnimeFrame(() => tick(start));\r\n    }\r\n  };\r\n\r\n  const nextQueue = () => {\r\n    const nextIndex: number = (index + 1) % queue.length;\r\n    setIndex(nextIndex);\r\n  };\r\n\r\n  const update = (item, action) => {\r\n    // current item slot\r\n    const currentItem = queue[index];\r\n    if (currentItem && currentItem === item && action === \"enter\") {\r\n      // setSize into width, height for container style\r\n      const width = bind.current.offsetWidth;\r\n      const height = bind.current.offsetHeight;\r\n      setSize({ width, height });\r\n    }\r\n  };\r\n\r\n  // react-spring transitions\r\n  const transitions = useTransition(queue[index], item => item, {\r\n    native: true,\r\n    from: { opacity: 0, transform: \"translate3d(0,100%,0)\" },\r\n    enter: {\r\n      opacity: 1,\r\n      transform: \"translate3d(0,0%,0)\"\r\n    },\r\n    leave: { opacity: 0, transform: \"translate3d(0,-50%,0)\" },\r\n    onFrame: update\r\n  });\r\n  return (\r\n    <div className={cx(className, \"container\")} style={{ ...style, ...size }}>\r\n      {transitions.map(({ item, props, key }) => (\r\n        <animated.div ref={bind} key={key} className={cx(\"item\")} style={props}>\r\n          {item}\r\n        </animated.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextLoop.defaultProps = {\r\n  queue: [],\r\n  interval: 1000\r\n};\r\n\r\nexport default TextLoop;\r\n","enum ThemeType {\r\n  Light = \"light\",\r\n  Dark = \"dark\",\r\n  Primary = \"primary\",\r\n  Secondary = \"secondary\"\r\n}\r\n\r\nexport default ThemeType;\r\n","// import modules\r\nimport React, { Component } from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport TextLoop from \"components/textLoop\";\r\n// import styles\r\nimport styles from \"./hellojs.module.scss\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass Hellojs extends Component {\r\n  render() {\r\n    return (\r\n      <div className={cx(\"container\")}>\r\n        <div className={cx(\"hellojs\")}>\r\n          <span className={cx(\"hello\")}>hello,</span>\r\n          <TextLoop\r\n            interval={3000}\r\n            className={cx(\"loop\")}\r\n            queue={[\"JS\", \"Jusung\", \"Jason\", \"Javascript\", \"JSON\"]}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hellojs;\r\n","import React, {\r\n  Component,\r\n  ReactNode,\r\n  ButtonHTMLAttributes,\r\n  AnchorHTMLAttributes,\r\n  CSSProperties\r\n} from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport ThemeType from \"structures/Theme\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ninterface DefaultButtonProps {\r\n  children?: ReactNode;\r\n  theme?: ThemeType;\r\n  className?: string;\r\n  disabled?: boolean;\r\n  rounded?: boolean;\r\n  style?: CSSProperties;\r\n}\r\n\r\ntype NativeButtonProps = DefaultButtonProps &\r\n  ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\ntype AnchorButtonProps = DefaultButtonProps &\r\n  AnchorHTMLAttributes<HTMLAnchorElement>;\r\n\r\ntype ButtonProps = NativeButtonProps & AnchorButtonProps;\r\n\r\nclass Button extends Component<ButtonProps> {\r\n  public static defaultProps: ButtonProps = {\r\n    theme: ThemeType.Light,\r\n    disabled: false,\r\n    rounded: false\r\n  };\r\n\r\n  renderButton = () => {\r\n    const {\r\n      className,\r\n      children,\r\n      style,\r\n      theme,\r\n      disabled,\r\n      rounded,\r\n      href,\r\n      target,\r\n      onClick,\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (href !== undefined) {\r\n      const anchorClass = cx(\r\n        \"button\",\r\n        { href },\r\n        className,\r\n        theme,\r\n        { rounded },\r\n        {\r\n          disabled\r\n        }\r\n      );\r\n      return (\r\n        <a\r\n          href={href}\r\n          style={style}\r\n          {...props}\r\n          target={target}\r\n          className={anchorClass}\r\n        >\r\n          {children}\r\n        </a>\r\n      );\r\n    }\r\n    const buttonClass = cx(\r\n      \"button\",\r\n      className,\r\n      theme,\r\n      { rounded },\r\n      { disabled }\r\n    );\r\n    return (\r\n      <button onClick={onClick} style={style} className={buttonClass}>\r\n        {children}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.renderButton();\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import { useState } from \"react\";\r\nimport { useGesture } from \"react-with-gesture\";\r\n// import { animated, useSpring } from \"react-spring\";\r\nimport { useSpring, animated } from \"react-spring/web.cjs\";\r\nimport React from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./mochi.module.scss\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nexport default () => {\r\n  const [action, onToggle] = useState();\r\n  const [{ xy }, set] = useSpring(() => ({\r\n    xy: [0, 0],\r\n    config: {\r\n      mass: 1,\r\n      tension: 475,\r\n      friction: 10\r\n    },\r\n    onRest: ({ xy }) => {\r\n      if (xy[0] === 0 && xy[1] === 0) {\r\n        onToggle(\"\");\r\n      }\r\n    }\r\n  }));\r\n  const bind = useGesture(({ down, delta, distance, xy }) => {\r\n    if (down) {\r\n      onToggle(\"down\");\r\n    } else {\r\n      onToggle(\"up\");\r\n    }\r\n\r\n    const range: number = distance > 300 ? 300 : distance;\r\n    // const x = range * direction[0];\r\n    // const y = range * direction[1];\r\n    // const range: number = 100;\r\n    // const x = Math.abs(delta[0]) >= range ? range : delta[0];\r\n    // const y = Math.abs(delta[1]) >= range ? range : delta[1];\r\n\r\n    set({\r\n      xy: down ? delta : [0, 0]\r\n    });\r\n  });\r\n\r\n  return (\r\n    <animated.div\r\n      {...bind()}\r\n      className={cx(\"mochi\", { [action]: action })}\r\n      style={{\r\n        transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`),\r\n        cursor: action === \"down\" ? \"grabbing\" : \"grab\"\r\n      }}\r\n    />\r\n  );\r\n};\r\n","// import modules\r\nimport React, { Component } from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport { navigate } from \"gatsby\";\r\n// import component\r\nimport Hellojs from \"containers/index/hellojs\";\r\nimport Button from \"components/button\";\r\nimport Mochi from \"containers/index/mochi\";\r\n// import styles\r\nimport styles from \"./index.module.scss\";\r\nconst cx = classNames.bind(styles);\r\n\r\nclass IndexPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className={cx(\"topSection\")}>\r\n        <div className={cx(\"left\")}>\r\n          {/* Hello JS Text Loop */}\r\n          <Hellojs />\r\n          {/* About Me Button */}\r\n          <Button\r\n            onClick={() => navigate(\"/about\")}\r\n            theme=\"secondary\"\r\n            rounded={true}\r\n            className={cx(\"aboutMe\")}\r\n          >\r\n            About Me <i className=\"eva eva-chevron-right-outline\" />\r\n          </Button>\r\n        </div>\r\n        <div className={cx(\"right\")}>\r\n          <Mochi />\r\n          <p className={cx(\"dragText\")}>\r\n            <i className=\"eva eva-arrowhead-up-outline\" aria-disabled />\r\n            (Drag Me 🙂)\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexPage;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}