{"version":3,"sources":["webpack:///./src/components/textLoop/index.tsx","webpack:///./src/containers/index/hellojs.tsx","webpack:///./src/containers/index/mochi.tsx","webpack:///./src/pages/index.tsx"],"names":["cx","classNames","bind","styles","TextLoop","_ref","className","queue","interval","style","_useState","useState","index","setIndex","_useState2","width","height","size","setSize","useRef","currentRaf","useEffect","length","start","performance","now","current","RequestAnimeFrame","tick","cancel","nextQueue","nextIndex","transitions","useTransition","item","native","from","opacity","transform","enter","leave","onFrame","action","currentItem","offsetWidth","offsetHeight","react_default","a","createElement","Object","assign","map","_ref2","props","key","web_cjs","div","ref","defaultProps","Hellojs","render","textLoop","Component","mochi","_cx","onToggle","_useSpring","useSpring","xy","config","mass","tension","friction","onRest","set","useGesture","down","delta","distance","interpolate","x","y","cursor","IndexPage","hellojs","components_button","onClick","navigate","theme","rounded","aria-disabled"],"mappings":"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","file":"component---src-pages-index-tsx-68a8812813fcb5741300.js","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  CSSProperties,\r\n  FunctionComponent\r\n} from \"react\";\r\nimport { useTransition, animated } from \"react-spring/web.cjs\";\r\nimport classNames from \"classnames/bind\";\r\nimport RequestAnimeFrame from \"raf\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ninterface TextLoopProps {\r\n  queue: string[];\r\n  interval?: number;\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst TextLoop: FunctionComponent<TextLoopProps> = ({\r\n  className,\r\n  queue,\r\n  interval,\r\n  style\r\n}) => {\r\n  // state\r\n  const [index, setIndex] = useState(0);\r\n  const [size, setSize] = useState({ width: 0, height: 0 });\r\n  const bind = useRef(null);\r\n  const currentRaf = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (queue.length > 1) {\r\n      // set current tick of Raf\r\n      const start = performance.now();\r\n      currentRaf.current = RequestAnimeFrame(() => tick(start));\r\n    }\r\n    return () => {\r\n      // unmount cancel to tick\r\n      RequestAnimeFrame.cancel(currentRaf.current);\r\n    };\r\n  }, [index]);\r\n\r\n  const tick = start => {\r\n    const currTime = performance.now() - start;\r\n    if (currTime > interval) {\r\n      nextQueue();\r\n    } else {\r\n      currentRaf.current = RequestAnimeFrame(() => tick(start));\r\n    }\r\n  };\r\n\r\n  const nextQueue = () => {\r\n    const nextIndex: number = (index + 1) % queue.length;\r\n    setIndex(nextIndex);\r\n  };\r\n\r\n  const update = (item, action) => {\r\n    // current item slot\r\n    const currentItem = queue[index];\r\n    if (currentItem && currentItem === item && action === \"enter\") {\r\n      // setSize into width, height for container style\r\n      const width = bind.current.offsetWidth;\r\n      const height = bind.current.offsetHeight;\r\n      setSize({ width, height });\r\n    }\r\n  };\r\n\r\n  // react-spring transitions\r\n  const transitions = useTransition(queue[index], item => item, {\r\n    native: true,\r\n    from: { opacity: 0, transform: \"translate3d(0,100%,0)\" },\r\n    enter: {\r\n      opacity: 1,\r\n      transform: \"translate3d(0,0%,0)\"\r\n    },\r\n    leave: { opacity: 0, transform: \"translate3d(0,-50%,0)\" },\r\n    onFrame: update\r\n  });\r\n  return (\r\n    <div className={cx(className, \"container\")} style={{ ...style, ...size }}>\r\n      {transitions.map(({ item, props, key }) => (\r\n        <animated.div ref={bind} key={key} className={cx(\"item\")} style={props}>\r\n          {item}\r\n        </animated.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextLoop.defaultProps = {\r\n  queue: [],\r\n  interval: 1000\r\n};\r\n\r\nexport default TextLoop;\r\n","// import modules\r\nimport React, { Component } from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport TextLoop from \"components/textLoop\";\r\n// import styles\r\nimport styles from \"./hellojs.module.scss\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass Hellojs extends Component {\r\n  render() {\r\n    return (\r\n      <div className={cx(\"container\")}>\r\n        <div className={cx(\"hellojs\")}>\r\n          <span className={cx(\"hello\")}>hello,</span>\r\n          <TextLoop\r\n            interval={3000}\r\n            className={cx(\"loop\")}\r\n            queue={[\"JS\", \"Jusung\", \"Jason\", \"Javascript\", \"JSON\"]}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hellojs;\r\n","import { useState } from \"react\";\r\nimport { useGesture } from \"react-with-gesture\";\r\n// import { animated, useSpring } from \"react-spring\";\r\nimport { useSpring, animated } from \"react-spring/web.cjs\";\r\nimport React from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./mochi.module.scss\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nexport default () => {\r\n  const [action, onToggle] = useState();\r\n  const [{ xy }, set] = useSpring(() => ({\r\n    xy: [0, 0],\r\n    config: {\r\n      mass: 1,\r\n      tension: 475,\r\n      friction: 10\r\n    },\r\n    onRest: ({ xy }) => {\r\n      if (xy[0] === 0 && xy[1] === 0) {\r\n        onToggle(\"\");\r\n      }\r\n    }\r\n  }));\r\n  const bind = useGesture(({ down, delta, distance, xy }) => {\r\n    if (down) {\r\n      onToggle(\"down\");\r\n    } else {\r\n      onToggle(\"up\");\r\n    }\r\n\r\n    const range: number = distance > 300 ? 300 : distance;\r\n    // const x = range * direction[0];\r\n    // const y = range * direction[1];\r\n    // const range: number = 100;\r\n    // const x = Math.abs(delta[0]) >= range ? range : delta[0];\r\n    // const y = Math.abs(delta[1]) >= range ? range : delta[1];\r\n\r\n    set({\r\n      xy: down ? delta : [0, 0]\r\n    });\r\n  });\r\n\r\n  return (\r\n    <animated.div\r\n      {...bind()}\r\n      className={cx(\"mochi\", { [action]: action })}\r\n      style={{\r\n        transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`),\r\n        cursor: action === \"down\" ? \"grabbing\" : \"grab\"\r\n      }}\r\n    />\r\n  );\r\n};\r\n","// import modules\r\nimport React, { Component } from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport { navigate } from \"gatsby\";\r\n// import component\r\nimport Hellojs from \"containers/index/hellojs\";\r\nimport Button from \"components/button\";\r\nimport Mochi from \"containers/index/mochi\";\r\n// import styles\r\nimport styles from \"./index.module.scss\";\r\nconst cx = classNames.bind(styles);\r\n\r\nclass IndexPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className={cx(\"topSection\")}>\r\n        <div className={cx(\"left\")}>\r\n          {/* Hello JS Text Loop */}\r\n          <Hellojs />\r\n          {/* About Me Button */}\r\n          <Button\r\n            onClick={() => navigate(\"/about\")}\r\n            theme=\"secondary\"\r\n            rounded={true}\r\n            className={cx(\"aboutMe\")}\r\n          >\r\n            About Me <i className=\"eva eva-chevron-right-outline\" />\r\n          </Button>\r\n        </div>\r\n        <div className={cx(\"right\")}>\r\n          <Mochi />\r\n          <p className={cx(\"dragText\")}>\r\n            <i className=\"eva eva-arrowhead-up-outline\" aria-disabled />\r\n            (Drag Me 🙂)\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexPage;\r\n"],"sourceRoot":""}